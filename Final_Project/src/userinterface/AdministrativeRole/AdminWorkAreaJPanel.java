

package userinterface.AdministrativeRole;

import Business.Doctor.Doctor;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import static Business.Organization.Organization.Type.Doctor;
import Business.WorkQueue.PatientHospitalAppointmentWorkRequest;
import java.awt.CardLayout;
import java.io.IOException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.Map;
import java.util.logging.Level;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  raunak
 */
public class AdminWorkAreaJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    Enterprise enterprise;
    EcoSystem business;
    LocalDate d;
    String time;
    
    Map<LocalDate,ArrayList<String>>appointment;

    public AdminWorkAreaJPanel(JPanel userProcessContainer, Enterprise enterprise, EcoSystem business) {
           initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.business = business;
        valueLabel.setText(enterprise.getName());
        String from = "08:00:00", to = "20:00:00";
        LocalTime fromTime = LocalTime.parse(from), toTime = LocalTime.parse(to);

        for (LocalTime counter = fromTime;
                counter.compareTo(toTime) <= 0;
                counter = counter.plusMinutes(30)) {
            jComboBoxTimeSlot.addItem(counter.toString());

                    }
//        populateComboBox();
        populateTable();
    }

       public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)tblpatientAppointment.getModel();
        model.setRowCount(0);
            
        for(PatientHospitalAppointmentWorkRequest request : business.getHospitalQueue().hospitalRequestList()){           
            if(request.getHospital().equals(enterprise.getName())){
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getName();
            row[2] = request.getAppDate();
            row[3] = request.getTime();
            row[4] = request.getStatus();
            d=request.getAppDate();
            time=request.getTime();
            model.addRow(row);
        }
        }
        
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        userJButton = new javax.swing.JButton();
        manageEmployeeJButton = new javax.swing.JButton();
        manageOrganizationJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblpatientAppointment = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnAccept = new javax.swing.JButton();
        availableDoctor = new javax.swing.JComboBox<>();
        jComboBoxTimeSlot = new javax.swing.JComboBox<>();
        btnSubmit = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnDecline = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnPatientLocation = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Hospital-Adminstrative Role");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        userJButton.setText("Manage User");
        userJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userJButtonActionPerformed(evt);
            }
        });
        add(userJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 100, 150, -1));

        manageEmployeeJButton.setText("Manage Employee");
        manageEmployeeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageEmployeeJButtonActionPerformed(evt);
            }
        });
        add(manageEmployeeJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 180, -1));

        manageOrganizationJButton.setText("Manage Organization");
        manageOrganizationJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageOrganizationJButtonActionPerformed(evt);
            }
        });
        add(manageOrganizationJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 120, 30));

        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 130, -1));

        tblpatientAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Appoinment No.", "Patient ", "Date", "Time", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblpatientAppointment);
        if (tblpatientAppointment.getColumnModel().getColumnCount() > 0) {
            tblpatientAppointment.getColumnModel().getColumn(0).setResizable(false);
            tblpatientAppointment.getColumnModel().getColumn(1).setResizable(false);
            tblpatientAppointment.getColumnModel().getColumn(2).setResizable(false);
            tblpatientAppointment.getColumnModel().getColumn(3).setResizable(false);
            tblpatientAppointment.getColumnModel().getColumn(4).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 670, 90));

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel2.setText("Patient Appointment Request");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        btnAccept.setText("Accept Appointment");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });
        add(btnAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 430, -1, -1));

        add(availableDoctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 370, 80, -1));

        add(jComboBoxTimeSlot, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 70, -1));

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 300, -1, -1));

        jLabel4.setText("Time slot available:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 300, -1, -1));

        btnDecline.setText("Decline Appointment");
        btnDecline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeclineActionPerformed(evt);
            }
        });
        add(btnDecline, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 430, -1, -1));

        jLabel5.setText("Assign Doctor:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, -1, -1));

        btnPatientLocation.setText("Check patient location");
        btnPatientLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientLocationActionPerformed(evt);
            }
        });
        add(btnPatientLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 600, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void userJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userJButtonActionPerformed
        // TODO add your handling code here:
        ManageUserAccountJPanel muajp = new ManageUserAccountJPanel(userProcessContainer, enterprise,business);
        userProcessContainer.add("ManageUserAccountJPanel", muajp);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_userJButtonActionPerformed

    private void manageEmployeeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageEmployeeJButtonActionPerformed

        ManageEmployeeJPanel manageEmployeeJPanel = new ManageEmployeeJPanel(userProcessContainer, enterprise.getOrganizationDirectory());
        userProcessContainer.add("manageEmployeeJPanel", manageEmployeeJPanel);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_manageEmployeeJButtonActionPerformed

    private void manageOrganizationJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageOrganizationJButtonActionPerformed

        ManageOrganizationJPanel manageOrganizationJPanel = new ManageOrganizationJPanel(userProcessContainer, enterprise.getOrganizationDirectory(),"Hospiatal Organization");
        userProcessContainer.add("manageOrganizationJPanel", manageOrganizationJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_manageOrganizationJButtonActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        availableDoctor.removeAllItems();
        
       
        String y = null;
        String doctor;
        int selectedRow = tblpatientAppointment.getSelectedRow();
        String time = (String) jComboBoxTimeSlot.getSelectedItem();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning", JOptionPane.WARNING_MESSAGE);

        } else {
            System.out.println(business.getDoctorDirectory().getdoctorlist());
            for (Doctor n : business.getDoctorDirectory().getdoctorlist()) {
                
                if(n.getHospital().equals(enterprise.getName()))
                {
                appointment = n.getAppointment();
               
                for (LocalDate dates : appointment.keySet()) {

                    if (dates.equals(d)) {
          
                        {                            
                            for (String timess : appointment.get(dates)) {
                                if (timess.equals(time)) {
                                    doctor = n.toString();
                                    System.out.println(doctor);
                                    availableDoctor.addItem(doctor);
                                   System.out.println("END");
                                }

                            }
                        }

                    }
                }

            }
            }
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
       
        int selectedRow = tblpatientAppointment.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning", JOptionPane.WARNING_MESSAGE);

        } else {
            PatientHospitalAppointmentWorkRequest request = (PatientHospitalAppointmentWorkRequest) tblpatientAppointment.getValueAt(selectedRow, 0);
            String doctor = (String) availableDoctor.getSelectedItem();
            String selected = (String) jComboBoxTimeSlot.getSelectedItem();
            for (LocalDate dates : appointment.keySet()) {
                if (dates.equals(d)) {
                    for (Doctor doc : business.getDoctorDirectory().getdoctorlist()) {
                        if (doc.getName().equals(doctor)) {
                            doc.removeAppointment(dates, selected);
                            appointment.get(d).remove(selected);
                        }
                        System.out.println(doc.getAppointment());
                    }
                }

                request.setStatus("Appointment confirmed");
                request.setCost(123.4);
                request.setDoctor(doctor);
                    Map<String,Date> reqMap = request.getStatusMap();
        reqMap.put("Appointment confirmed to doctor-"+doctor, new Date());
        request.setStatusMap(reqMap); 
            }
            JOptionPane.showMessageDialog(null, "Appointmnent confirmed and assigned to doctor");
            populateTable();
             business.getHospitalQueue().updateHospitalRequest(request, business.getHospitalQueue().hospitalRequestList());
        }
   
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnPatientLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientLocationActionPerformed
        // TODO add your handling code here:
                try{String address = "360+West+Boylston+Street,+Boylston,+MA+01583";
            String url = "https://www.google.com/maps/place/"+address;
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(AdminWorkAreaJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnPatientLocationActionPerformed

    private void btnDeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeclineActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblpatientAppointment.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning", JOptionPane.WARNING_MESSAGE);

        } else {
            PatientHospitalAppointmentWorkRequest request = (PatientHospitalAppointmentWorkRequest) tblpatientAppointment.getValueAt(selectedRow, 0);
        request.setStatus("Appointment confirmed");
        }
    }//GEN-LAST:event_btnDeclineActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> availableDoctor;
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnDecline;
    private javax.swing.JButton btnPatientLocation;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JComboBox<String> jComboBoxTimeSlot;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton manageEmployeeJButton;
    private javax.swing.JButton manageOrganizationJButton;
    private javax.swing.JTable tblpatientAppointment;
    private javax.swing.JButton userJButton;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
    
}
