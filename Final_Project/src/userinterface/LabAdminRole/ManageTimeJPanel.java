/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.LabAdminRole;

import Business.Enterprise.Enterprise;
import Business.Enterprise.LabEnterprise;
import Business.Organization.LaboratoryOrganization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.temporal.TemporalAdjusters;
import java.util.Date;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.util.Calendar;
/**
 *
 * @author Manasa
 */
public class ManageTimeJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageTimeJPanel
     */
    JPanel userProcessContainer;
    Enterprise enterprise;
    UserAccount account;
    LaboratoryOrganization organization;
   
    public ManageTimeJPanel(JPanel userProcessContainer, UserAccount account, LaboratoryOrganization LabOrganization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.account = account;
        this.organization = LabOrganization;
        populateDate();
        populateTime();
        populateTimeslot();
    }


   public void populateDate(){
       
   dateBox.removeAllItems();
   dateBox.addItem("");
   dateBox.addItem("MONDAY: "+String.valueOf(LocalDate.now().with(TemporalAdjusters.next(DayOfWeek.MONDAY))));
    dateBox.addItem("TUESDAY: "+String.valueOf(LocalDate.now().with(TemporalAdjusters.next(DayOfWeek.TUESDAY))));
     dateBox.addItem("WEDNESDAY: "+String.valueOf(LocalDate.now().with(TemporalAdjusters.next(DayOfWeek.WEDNESDAY))));
      dateBox.addItem("THURSDAY: "+String.valueOf(LocalDate.now().with(TemporalAdjusters.next(DayOfWeek.THURSDAY))));
       dateBox.addItem("FRIDAY: "+String.valueOf(LocalDate.now().with(TemporalAdjusters.next(DayOfWeek.FRIDAY))));
   }
   public void populateTime(){
       timeBox.removeAllItems();
       timeBox.addItem("09.00pm-09.30 AM");
       timeBox.addItem("10.00pm-10.30 AM");
       timeBox.addItem("10.30pm-11.00 AM");
       timeBox.addItem("07.00pm-08.30 AM");
       timeBox.addItem("03.00pm-03.30 PM");
       timeBox.addItem("03.30pm-04.00 PM");
       timeBox.addItem("04.00pm-04.30 PM");
   }
   public void populateTimeslot(){
               DefaultTableModel model = (DefaultTableModel)slotTable.getModel();
        model.setRowCount(0);
             LabEnterprise e = (LabEnterprise) enterprise;
      Map<String,String> slots = e.getTimeSlot();
            for (Map.Entry<String,String> slot : slots.entrySet()) {  
                System.out.println(slot.getKey());
                String [] slotDet =  slot.getKey().split(",");
                    Object[] row = new Object[5];
                    row[0] = slotDet[0];
                    row[1] = slotDet[1];

                    model.addRow(row);    
         }
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateBox = new javax.swing.JComboBox<>();
        timeBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        slotTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnRem = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();

        dateBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        timeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Manage TimeSlot");

        btnBack.setText("<-Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        slotTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Day", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(slotTable);

        jLabel2.setText("Next Week Slots:");

        jLabel3.setText("Date:");

        jLabel4.setText("Time:");

        btnRem.setText("Remove Slot");
        btnRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemActionPerformed(evt);
            }
        });

        btnAdd.setText("Add Slots");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(btnRem))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(134, 134, 134)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(66, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(60, 60, 60)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(80, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 240, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(timeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnRem)
                        .addGap(63, 63, 63))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(93, 93, 93)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(97, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemActionPerformed
        // TODO add your handling code here:
                   
        int selectedRow = slotTable.getSelectedRow();
        if(selectedRow <= 0){
                     JOptionPane.showMessageDialog(null, "Please select a slot from table!", "Warning", JOptionPane.WARNING_MESSAGE);       
                  return;
        }
        String slotDate = (String) slotTable.getValueAt(selectedRow, 0);
        String slotTime = (String) slotTable.getValueAt(selectedRow, 1);
        LabEnterprise e = (LabEnterprise) enterprise;
        Map<String,String> map = e.getTimeSlot();
        map.remove(slotDate+","+slotTime);
        e.setTimeSlot(map);
        populateTimeslot();
    }//GEN-LAST:event_btnRemActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
                      if((dateBox.getSelectedItem().equals("") ||(timeBox.getSelectedItem().equals("")))){
         JOptionPane.showMessageDialog(null, "Please select date and time from drop down options to add!", "Warning", JOptionPane.WARNING_MESSAGE);       
                  return;
        }
                      LabEnterprise e = (LabEnterprise) enterprise;
                      Map<String,String> map = e.getTimeSlot();
                      map.put(dateBox.getSelectedItem().toString()+","+timeBox.getSelectedItem().toString(),"false");
                      e.setTimeSlot(map);
                      populateTimeslot();
         JOptionPane.showMessageDialog(null, "Time Slot added successfully!", "Information", JOptionPane.INFORMATION_MESSAGE);       
                                        
    }//GEN-LAST:event_btnAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRem;
    private javax.swing.JComboBox<String> dateBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable slotTable;
    private javax.swing.JComboBox<String> timeBox;
    // End of variables declaration//GEN-END:variables
}
