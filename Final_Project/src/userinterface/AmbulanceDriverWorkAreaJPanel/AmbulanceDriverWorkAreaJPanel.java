/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AmbulanceDriverWorkAreaJPanel;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.AdminOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EmergencyRequest;
import java.util.Date;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anjali
 */
public class AmbulanceDriverWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AmbulanceDriverWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private EcoSystem ecosystem;
    private Enterprise enterprise;
    public AmbulanceDriverWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecosystem, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.ecosystem = ecosystem;
        this.enterprise = enterprise;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void populateTable(){
       DefaultTableModel model = (DefaultTableModel)emerTable.getModel();
        model.setRowCount(0);

        for(EmergencyRequest req: account.getEmergencyQueue().getEmergencyRequestList()){
            Object row[] = new Object[8];
                 row[0] = req;
                 row[1] = req.getSender();
                 row[2] = req.getCreateDate();
                 row[3] =req.getHospital();
                 row[4] = req.getMsg();
                 row[5] = req.getResult();
                 

                 
                 
            model.addRow(row);                    
        
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        emerTable = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        emerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "RequestID", "Patient", "CreateDate", "Hospital", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(emerTable);

        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel2.setText("Ambulance Work Area JPanel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
<<<<<<< HEAD
                .addGap(225, 225, 225)
                .addComponent(jLabel1)
                .addContainerGap(274, Short.MAX_VALUE))
=======
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(btnUpdate)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(jLabel2)
                        .addGap(193, 193, 193)))
                .addContainerGap())
>>>>>>> 10852a24585ce65adb373041e38fe50d08079858
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
<<<<<<< HEAD
                .addComponent(jLabel1)
                .addContainerGap(450, Short.MAX_VALUE))
=======
                .addComponent(jLabel2)
                .addGap(60, 60, 60)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(btnUpdate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
>>>>>>> 10852a24585ce65adb373041e38fe50d08079858
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRow = emerTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        EmergencyRequest eReq= (EmergencyRequest)emerTable.getValueAt(selectedRow, 0);
        eReq.setResult("CompletedRequest!");
        JOptionPane.showMessageDialog(null, "Patient reached Hospital successfully!", "Information", JOptionPane.INFORMATION_MESSAGE);
        Map<String,Date> reqMap = eReq.getStatusMap();
        reqMap.put("Patient Admitted to Hospital -"+eReq.getHospital(), new Date());
        eReq.setStatusMap(reqMap);
        ecosystem.getEmergencyQueue().updateEmergencyRequest(eReq, ecosystem.getEmergencyQueue().getEmergencyRequestList());
        account.getEmergencyQueue().removeEmergencyRequest(eReq);
        populateTable();
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTable emerTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
